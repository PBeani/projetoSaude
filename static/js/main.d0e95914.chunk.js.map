{"version":3,"sources":["hoc/auxiliar.js","components/Header/Header.js","components/TableauView/TableauView.js","components/TableauHolder/TableauHolder.js","containers/Home/Home.js","containers/Dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["auxiliar","props","children","Header","react_default","a","createElement","className","TableauDashboard","this","initViz","vizUrl","url","vizContainer","window","tableau","Viz","_this","ref","div","Component","tableauHolder","hideClass","show","title","TableauView_TableauView","Home","state","showFilters","views","urlFilter","filterHandler","toggledValue","Object","objectSpread","setState","_this$state2","hoc_auxiliar","onClick","map","view","index","key","TableauHolder_TableauHolder","Dashboard","components_Header_Header","containers_Home_Home","App","containers_Dashboard_Dashboard","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gWACeA,SADE,SAACC,GAAD,OAAWA,EAAMC,WCanBC,SAVA,SAAAF,GAEX,OACIG,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,2CCkBKE,2MAlBXC,KAAKC,4CAIL,IAAMC,EAASF,KAAKR,MAAMW,IACpBC,EAAeJ,KAAKI,aAChB,IAAIC,OAAOC,QAAQC,IAAIH,EAAcF,oCAIxC,IAAAM,EAAAR,KACP,OACEL,EAAAC,EAAAC,cAAA,OAAKY,IAAK,SAACC,GAAUF,EAAKJ,aAAeM,YAfhBC,cCUlBC,SAXO,SAACpB,GACnB,IAAMqB,EAAYrB,EAAMsB,KAAO,GAAK,OAEpC,OACInB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,gBAAkBN,EAAMM,WAAa,IAAM,IAAMe,GAC7DlB,EAAAC,EAAAC,cAAA,UAAKL,EAAMuB,OACXpB,EAAAC,EAAAC,cAACmB,EAAD,CAAab,IAAKX,EAAMW,SCoErBc,oNAxEXC,MAAQ,CACJC,aAAa,EACbC,MAAO,CACH,CACIjB,IAAK,gFACLkB,UAAW,gFACXvB,UAAW,oBACXiB,MAAO,uDAEX,CACIZ,IAAK,gFACLkB,UAAW,gFACXvB,UAAW,oBACXiB,MAAO,uCAEX,CACIZ,IAAK,gFACLkB,UAAW,gFACXvB,UAAW,oBACXiB,MAAO,sDAEX,CACIZ,IAAK,gFACLkB,UAAW,gFACXvB,UAAW,oBACXiB,MAAO,2CAEX,CACIZ,IAAK,gFACLkB,UAAW,iFACXvB,UAAW,2BACXiB,MAAO,8CAKnBO,cAAgB,WAAM,IAEdC,GAFcC,OAAAC,EAAA,EAAAD,CAAA,GACWhB,EAAKU,OAA1BC,YAERX,EAAKkB,SAAS,CAAEP,YAAaI,6EAGxB,IAAAI,EAAAH,OAAAC,EAAA,EAAAD,CAAA,GAE+BxB,KAAKkB,OAAjCE,EAFHO,EAEGP,MAAOD,EAFVQ,EAEUR,YAEf,OACIxB,EAAAC,EAAAC,cAAC+B,EAAD,KACIjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS+B,QAAS7B,KAAKsB,eAAiBH,EAAc,gBAAkB,0BACvFxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACVsB,EAAMU,IAAI,SAACC,EAAMC,GACd,OACIrC,EAAAC,EAAAC,cAAC+B,EAAD,CAAUK,IAAKD,GACXrC,EAAAC,EAAAC,cAACqC,EAAD,CACI/B,IAAK4B,EAAK5B,IACVL,UAAWiC,EAAKjC,UAChBgB,MAAOK,EACPJ,MAAOgB,EAAKhB,QAChBpB,EAAAC,EAAAC,cAACqC,EAAD,CACI/B,IAAK4B,EAAKV,UACVvB,UAAWiC,EAAKjC,UAChBgB,KAAMK,EACNJ,MAAOgB,EAAKhB,oBA/D7BJ,cCgBJwB,oNAdXjB,MAAQ,2EAGJ,OACIvB,EAAAC,EAAAC,cAAC+B,EAAD,KACIjC,EAAAC,EAAAC,cAACuC,EAAD,MACAzC,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAACwC,EAAD,eARI1B,cCMT2B,mLANX,OACC3C,EAAAC,EAAAC,cAAC0C,EAAD,aAHa5B,aCQE6B,QACW,cAA7BnC,OAAOoC,SAASC,UAEe,UAA7BrC,OAAOoC,SAASC,UAEhBrC,OAAOoC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d0e95914.chunk.js","sourcesContent":["const auxiliar = (props) => props.children;\r\nexport default auxiliar;","import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = props => {\r\n\r\n    return (\r\n        <header>\r\n            <div className=\"logo\"></div>\r\n            <h1>Monitor de saúde</h1>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport tableau from 'tableau-api';\r\nimport './TableauView.css';\r\n\r\n\r\n  class TableauDashboard extends Component {\r\n    \r\n    componentDidMount() {  \r\n      this.initViz()  \r\n    }  \r\n    \r\n    initViz() {  \r\n      const vizUrl = this.props.url;  \r\n      const vizContainer = this.vizContainer;  \r\n      let viz = new window.tableau.Viz(vizContainer, vizUrl)  \r\n    }  \r\n    \r\n    \r\n    render() {  \r\n      return (  \r\n        <div ref={(div) => { this.vizContainer = div }}>  \r\n        </div>  \r\n      )  \r\n    }  \r\n  }\r\n  \r\n  export default TableauDashboard;","import React from 'react';\r\nimport TableauView from '../TableauView/TableauView';\r\nimport './TableauHolder.css';\r\n\r\nconst tableauHolder = (props) => {\r\n    const hideClass = props.show ? '' : 'hide';\r\n\r\n    return (\r\n        <div className={'viewHolder  ' + (props.className || '') + ' ' + hideClass}>\r\n            <h3>{props.title}</h3>\r\n            <TableauView url={props.url} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default tableauHolder;","import React, { Component } from 'react';\r\nimport TableauHolder from '../../components/TableauHolder/TableauHolder';\r\nimport './Home.css';\r\nimport Auxiliar from '../../hoc/auxiliar';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        showFilters: false,\r\n        views: [\r\n            {\r\n                url: 'https://public.tableau.com/views/RP2-v2/Planilha5?:embed=y&:display_count=yes',\r\n                urlFilter: 'https://public.tableau.com/views/RP2-v2/Planilha6?:embed=y&:display_count=yes',\r\n                className: 'full fixed-height',\r\n                title: 'Distribuição geográfica das ocorrências'\r\n            },\r\n            {\r\n                url: 'https://public.tableau.com/views/RP2-v2/Planilha7?:embed=y&:display_count=yes',\r\n                urlFilter: 'https://public.tableau.com/views/RP2-v2/Planilha8?:embed=y&:display_count=yes',\r\n                className: 'half fixed-height',\r\n                title: 'Ocorrências por sexo do paciente'\r\n            },\r\n            {\r\n                url: 'https://public.tableau.com/views/RP2-v2/Planilha2?:embed=y&:display_count=yes',\r\n                urlFilter: 'https://public.tableau.com/views/RP2-v2/Planilha1?:embed=y&:display_count=yes',\r\n                className: 'half fixed-height',\r\n                title: 'Distribuição mensal de ocorrências (2018)'\r\n            },\r\n            {\r\n                url: 'https://public.tableau.com/views/RP2-v2/Planilha3?:embed=y&:display_count=yes',\r\n                urlFilter: 'https://public.tableau.com/views/RP2-v2/Planilha4?:embed=y&:display_count=yes',\r\n                className: 'full extra-height',\r\n                title: 'Ocorrências por cidade dos pacientes'\r\n            },\r\n            {\r\n                url: 'https://public.tableau.com/views/RP2-v2/Planilha9?:embed=y&:display_count=yes',\r\n                urlFilter: 'https://public.tableau.com/views/RP2-v2/Planilha10?:embed=y&:display_count=yes',\r\n                className: 'full extra-height capped',\r\n                title: 'Ocorrências por idade dos pacientes'\r\n            },\r\n        ]\r\n    }\r\n\r\n    filterHandler = () => {\r\n        const { showFilters } = { ...this.state };\r\n        let toggledValue = !showFilters;\r\n        this.setState({ showFilters: toggledValue });\r\n    };\r\n\r\n    render() {\r\n\r\n        const { views, showFilters } = { ...this.state };\r\n\r\n        return (\r\n            <Auxiliar>\r\n                <div className=\"filter\" onClick={this.filterHandler} >{showFilters ? 'Exibir totais' : 'Filtrar por doenças'}</div>\r\n                <div className=\"home\">\r\n                    {views.map((view, index) => {\r\n                        return (\r\n                            <Auxiliar key={index}>\r\n                                <TableauHolder\r\n                                    url={view.url}\r\n                                    className={view.className}\r\n                                    show={!showFilters}\r\n                                    title={view.title} />\r\n                                <TableauHolder\r\n                                    url={view.urlFilter}\r\n                                    className={view.className}\r\n                                    show={showFilters}\r\n                                    title={view.title} />\r\n                            </Auxiliar>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </Auxiliar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport Auxiliar from '../../hoc/auxiliar';\r\nimport Header from '../../components/Header/Header';\r\nimport Home from '../Home/Home';\r\nimport './Dashboard.css';\r\n\r\nclass Dashboard extends Component {\r\n    state = {};\r\n\r\n    render() {\r\n        return (\r\n            <Auxiliar>\r\n                <Header />\r\n                <section>\r\n                    <Home />\r\n                </section>\r\n            </Auxiliar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Dashboard from './containers/Dashboard/Dashboard';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n     <Dashboard />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}