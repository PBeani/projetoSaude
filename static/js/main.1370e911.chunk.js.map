{"version":3,"sources":["hoc/auxiliar.js","components/Header/Header.js","components/TableauView/TableauView.js","components/TableauHolder/TableauHolder.js","containers/Home/Home.js","containers/Dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["auxiliar","props","children","Header","react_default","a","createElement","className","TableauDashboard","this","initViz","vizUrl","url","vizContainer","window","tableau","Viz","_this","ref","div","Component","tableauHolder","hideClass","show","title","TableauView_TableauView","Home","state","showFilters","views","urlFilter","filterHandler","toggledValue","Object","objectSpread","setState","_this$state2","hoc_auxiliar","onClick","map","view","index","key","TableauHolder_TableauHolder","Dashboard","components_Header_Header","containers_Home_Home","App","containers_Dashboard_Dashboard","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gWACeA,SADE,SAACC,GAAD,OAAWA,EAAMC,WCanBC,SAVA,SAAAF,GAEX,OACIG,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,2CCkBKE,2MAlBXC,KAAKC,4CAIL,IAAMC,EAASF,KAAKR,MAAMW,IACpBC,EAAeJ,KAAKI,aAChB,IAAIC,OAAOC,QAAQC,IAAIH,EAAcF,oCAIxC,IAAAM,EAAAR,KACP,OACEL,EAAAC,EAAAC,cAAA,OAAKY,IAAK,SAACC,GAAUF,EAAKJ,aAAeM,YAfhBC,cCUlBC,SAXO,SAACpB,GACnB,IAAMqB,EAAYrB,EAAMsB,KAAO,GAAK,OAEpC,OACInB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,gBAAkBN,EAAMM,WAAa,IAAM,IAAMe,GAC7DlB,EAAAC,EAAAC,cAAA,UAAKL,EAAMuB,OACXpB,EAAAC,EAAAC,cAACmB,EAAD,CAAab,IAAKX,EAAMW,SCoErBc,oNAxEXC,MAAQ,CACJC,aAAa,EACbC,MAAO,CACH,CACIjB,IAAK,gFACLkB,UAAW,gFACXvB,UAAW,oBACXiB,MAAO,uDAEX,CACIZ,IAAK,gFACLkB,UAAW,gFACXvB,UAAW,oBACXiB,MAAO,uCAEX,CACIZ,IAAK,gFACLkB,UAAW,gFACXvB,UAAW,oBACXiB,MAAO,sDAEX,CACIZ,IAAK,gFACLkB,UAAW,gFACXvB,UAAW,oBACXiB,MAAO,0CAEX,CACIZ,IAAK,gFACLkB,UAAW,iFACXvB,UAAW,oBACXiB,MAAO,8CAKnBO,cAAgB,WAAM,IAEdC,GAFcC,OAAAC,EAAA,EAAAD,CAAA,GACWhB,EAAKU,OAA1BC,YAERX,EAAKkB,SAAS,CAAEP,YAAaI,6EAGxB,IAAAI,EAAAH,OAAAC,EAAA,EAAAD,CAAA,GAE+BxB,KAAKkB,OAAjCE,EAFHO,EAEGP,MAAOD,EAFVQ,EAEUR,YAEf,OACIxB,EAAAC,EAAAC,cAAC+B,EAAD,KACIjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS+B,QAAS7B,KAAKsB,eAAiBH,EAAc,gBAAkB,0BACvFxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACVsB,EAAMU,IAAI,SAACC,EAAMC,GACd,OACIrC,EAAAC,EAAAC,cAAC+B,EAAD,CAAUK,IAAKD,GACXrC,EAAAC,EAAAC,cAACqC,EAAD,CACI/B,IAAK4B,EAAK5B,IACVL,UAAWiC,EAAKjC,UAChBgB,MAAOK,EACPJ,MAAOgB,EAAKhB,QAChBpB,EAAAC,EAAAC,cAACqC,EAAD,CACI/B,IAAK4B,EAAKV,UACVvB,UAAWiC,EAAKjC,UAChBgB,KAAMK,EACNJ,MAAOgB,EAAKhB,oBA/D7BJ,cCgBJwB,oNAdXjB,MAAQ,2EAGJ,OACIvB,EAAAC,EAAAC,cAAC+B,EAAD,KACIjC,EAAAC,EAAAC,cAACuC,EAAD,MACAzC,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAACwC,EAAD,eARI1B,cCMT2B,mLANX,OACC3C,EAAAC,EAAAC,cAAC0C,EAAD,aAHa5B,aCQE6B,QACW,cAA7BnC,OAAOoC,SAASC,UAEe,UAA7BrC,OAAOoC,SAASC,UAEhBrC,OAAOoC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1370e911.chunk.js","sourcesContent":["const auxiliar = (props) => props.children;\r\nexport default auxiliar;","import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = props => {\r\n\r\n    return (\r\n        <header>\r\n            <div className=\"logo\"></div>\r\n            <h1>Monitor de saúde</h1>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport tableau from 'tableau-api';\r\nimport './TableauView.css';\r\n\r\n\r\n  class TableauDashboard extends Component {\r\n    \r\n    componentDidMount() {  \r\n      this.initViz()  \r\n    }  \r\n    \r\n    initViz() {  \r\n      const vizUrl = this.props.url;  \r\n      const vizContainer = this.vizContainer;  \r\n      let viz = new window.tableau.Viz(vizContainer, vizUrl)  \r\n    }  \r\n    \r\n    \r\n    render() {  \r\n      return (  \r\n        <div ref={(div) => { this.vizContainer = div }}>  \r\n        </div>  \r\n      )  \r\n    }  \r\n  }\r\n  \r\n  export default TableauDashboard;","import React from 'react';\r\nimport TableauView from '../TableauView/TableauView';\r\nimport './TableauHolder.css';\r\n\r\nconst tableauHolder = (props) => {\r\n    const hideClass = props.show ? '' : 'hide';\r\n\r\n    return (\r\n        <div className={'viewHolder  ' + (props.className || '') + ' ' + hideClass}>\r\n            <h3>{props.title}</h3>\r\n            <TableauView url={props.url} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default tableauHolder;","import React, { Component } from 'react';\r\nimport TableauHolder from '../../components/TableauHolder/TableauHolder';\r\nimport './Home.css';\r\nimport Auxiliar from '../../hoc/auxiliar';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        showFilters: false,\r\n        views: [\r\n            {\r\n                url: 'https://public.tableau.com/views/RP2-v2/Planilha5?:embed=y&:display_count=yes',\r\n                urlFilter: 'https://public.tableau.com/views/RP2-v2/Planilha6?:embed=y&:display_count=yes',\r\n                className: 'full fixed-height',\r\n                title: 'Distribuição geográfica das ocorrências'\r\n            },\r\n            {\r\n                url: 'https://public.tableau.com/views/RP2-v2/Planilha7?:embed=y&:display_count=yes',\r\n                urlFilter: 'https://public.tableau.com/views/RP2-v2/Planilha8?:embed=y&:display_count=yes',\r\n                className: 'half fixed-height',\r\n                title: 'Ocorrências por sexo do paciente'\r\n            },\r\n            {\r\n                url: 'https://public.tableau.com/views/RP2-v2/Planilha2?:embed=y&:display_count=yes',\r\n                urlFilter: 'https://public.tableau.com/views/RP2-v2/Planilha1?:embed=y&:display_count=yes',\r\n                className: 'half fixed-height',\r\n                title: 'Distribuição mensal de ocorrências (2018)'\r\n            },\r\n            {\r\n                url: 'https://public.tableau.com/views/RP2-v2/Planilha3?:embed=y&:display_count=yes',\r\n                urlFilter: 'https://public.tableau.com/views/RP2-v2/Planilha4?:embed=y&:display_count=yes',\r\n                className: 'full extra-height',\r\n                title: 'Ocorrências por idade dos pacientes'\r\n            },\r\n            {\r\n                url: 'https://public.tableau.com/views/RP2-v2/Planilha9?:embed=y&:display_count=yes',\r\n                urlFilter: 'https://public.tableau.com/views/RP2-v2/Planilha10?:embed=y&:display_count=yes',\r\n                className: 'full extra-height',\r\n                title: 'Ocorrências por idade dos pacientes'\r\n            },\r\n        ]\r\n    }\r\n\r\n    filterHandler = () => {\r\n        const { showFilters } = { ...this.state };\r\n        let toggledValue = !showFilters;\r\n        this.setState({ showFilters: toggledValue });\r\n    };\r\n\r\n    render() {\r\n\r\n        const { views, showFilters } = { ...this.state };\r\n\r\n        return (\r\n            <Auxiliar>\r\n                <div className=\"filter\" onClick={this.filterHandler} >{showFilters ? 'Exibir totais' : 'Filtrar por doenças'}</div>\r\n                <div className=\"home\">\r\n                    {views.map((view, index) => {\r\n                        return (\r\n                            <Auxiliar key={index}>\r\n                                <TableauHolder\r\n                                    url={view.url}\r\n                                    className={view.className}\r\n                                    show={!showFilters}\r\n                                    title={view.title} />\r\n                                <TableauHolder\r\n                                    url={view.urlFilter}\r\n                                    className={view.className}\r\n                                    show={showFilters}\r\n                                    title={view.title} />\r\n                            </Auxiliar>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </Auxiliar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport Auxiliar from '../../hoc/auxiliar';\r\nimport Header from '../../components/Header/Header';\r\nimport Home from '../Home/Home';\r\nimport './Dashboard.css';\r\n\r\nclass Dashboard extends Component {\r\n    state = {};\r\n\r\n    render() {\r\n        return (\r\n            <Auxiliar>\r\n                <Header />\r\n                <section>\r\n                    <Home />\r\n                </section>\r\n            </Auxiliar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Dashboard from './containers/Dashboard/Dashboard';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n     <Dashboard />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}